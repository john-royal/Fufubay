// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum UserRole {
  BANNED
  PENDING_REVIEW
  ORDINARY_USER
  SUPER_USER
}

model User {
  id                  Int       @id @default(autoincrement())
  username            String    @unique
  email               String    @unique
  phone               String?   @unique
  password            String
  bio                 String    @default("")
  imageUrl            String    @default("https://csc-32200-fufubay-images.s3.amazonaws.com/users/user-placeholder.png")
  addressLine1        String?
  addressLine2        String?
  addressCity         String?
  addressState        String?
  addressPostalCode   String?
  addressCountry      String?
  paymentCardId       String?
  paymentCardLast4    String?
  paymentCardBrand    String?
  paymentCardExpMonth Int?
  paymentCardExpYear  Int?
  createdAt           DateTime  @default(now())
  role                UserRole  @default(PENDING_REVIEW)
  stripeAccountId     String
  stripeCustomerId    String
  auctions            Auction[]
  reports             Report[]
  bids                Bid[]
  authoredReviews     Review[]  @relation("authored-reviews")
  reviews             Review[]  @relation("reviews")
}

model Review {
  id         Int     @id @default(autoincrement())
  rating     Int
  comments   String?
  seller     User    @relation("reviews", fields: [sellerId], references: [id])
  customer   User    @relation("authored-reviews", fields: [customerId], references: [id])
  sellerId   Int
  customerId Int

  @@unique([sellerId, customerId])
}

model Report {
  id         Int      @id @default(autoincrement())
  message    String
  isResolved Boolean  @default(false)
  user       User?    @relation(fields: [userId], references: [id])
  auction    Auction? @relation(fields: [auctionId], references: [id])
  auctionId  Int?
  userId     Int?
}

enum AuctionStatus {
  PENDING_REVIEW
  LIVE
  SOLD
  CANCELED
}

model Auction {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  slug         String
  imageUrl     String        @default("https://csc-32200-fufubay-images.s3.amazonaws.com/auctions/auction-placeholder.png")
  status       AuctionStatus @default(PENDING_REVIEW)
  createdAt    DateTime      @default(now())
  startsAt     DateTime?
  endsAt       DateTime?
  sellerId     Int
  seller       User          @relation(fields: [sellerId], references: [id])
  bids         Bid[]
  reports      Report[]
}

enum BidStatus {
  PENDING
  WIN
  LOSE
}

model Bid {
  id        Int       @id @default(autoincrement())
  amount    Int
  date      DateTime  @default(now())
  status    BidStatus @default(PENDING)
  auctionId Int
  stripeId  String
  userId    Int
  auction   Auction   @relation(fields: [auctionId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}
